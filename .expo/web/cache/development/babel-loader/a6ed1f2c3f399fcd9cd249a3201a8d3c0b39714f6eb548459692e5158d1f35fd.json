{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MONTH = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar HandleDatePicker = function HandleDatePicker(_ref) {\n  var dateSetter = _ref.dateSetter,\n    visibility = _ref.visibility,\n    visibilitySetter = _ref.visibilitySetter;\n  var currentDate = function currentDate() {\n    var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n    return MONTH[date.getUTCMonth()] + \" \" + date.getDate() + \", \" + date.getFullYear();\n  };\n  var handleChosen = function handleChosen(date) {\n    dateSetter(date);\n    visibilitySetter(!visibility);\n  };\n  return _jsx(DateTimePickerModal, {\n    isVisible: visibility,\n    mode: \"date\",\n    display: \"inline\",\n    onConfirm: handleChosen,\n    onCancel: function onCancel() {\n      return visibilitySetter(!visibility);\n    }\n  });\n};\nvar styles = StyleSheet.create({});\nexport default HandleDatePicker;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","DateTimePickerModal","jsx","_jsx","MONTH","HandleDatePicker","_ref","dateSetter","visibility","visibilitySetter","currentDate","date","arguments","length","undefined","Date","getUTCMonth","getDate","getFullYear","handleChosen","isVisible","mode","display","onConfirm","onCancel","styles","create"],"sources":["D:/Fci/JavaScript/React-Native/Mar-Marcus/src/components/HandleDatePicker.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\n\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\n\r\nconst MONTH = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst HandleDatePicker = ({ dateSetter, visibility, visibilitySetter }) => {\r\n  \r\n  const currentDate = (date = new Date()) => {\r\n    return `${\r\n      MONTH[date.getUTCMonth()]\r\n    } ${date.getDate()}, ${date.getFullYear()}`;\r\n  };\r\n\r\n  const handleChosen = (date) => {\r\n    dateSetter(date);\r\n    visibilitySetter(!visibility);\r\n  };\r\n\r\n  return (\r\n    <DateTimePickerModal\r\n      isVisible={visibility}\r\n      mode=\"date\"\r\n      display=\"inline\"\r\n      onConfirm={handleChosen}\r\n      onCancel={() => visibilitySetter(!visibility)}\r\n    />\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({});\r\nexport default HandleDatePicker;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAGnD,OAAOC,mBAAmB,MAAM,oCAAoC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAErE,IAAMC,KAAK,GAAG,CACZ,SAAS,EACT,UAAU,EACV,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACX;AAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAqD;EAAA,IAA/CC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAAEC,gBAAgB,GAAAH,IAAA,CAAhBG,gBAAgB;EAElE,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAA0B;IAAA,IAAtBC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAIG,IAAI,CAAC,CAAC;IACpC,OACEX,KAAK,CAACO,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,SACvBL,IAAI,CAACM,OAAO,CAAC,CAAC,UAAKN,IAAI,CAACO,WAAW,CAAC,CAAC;EAC3C,CAAC;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIR,IAAI,EAAK;IAC7BJ,UAAU,CAACI,IAAI,CAAC;IAChBF,gBAAgB,CAAC,CAACD,UAAU,CAAC;EAC/B,CAAC;EAED,OACEL,IAAA,CAACF,mBAAmB;IAClBmB,SAAS,EAAEZ,UAAW;IACtBa,IAAI,EAAC,MAAM;IACXC,OAAO,EAAC,QAAQ;IAChBC,SAAS,EAAEJ,YAAa;IACxBK,QAAQ,EAAE,SAAAA,SAAA;MAAA,OAAMf,gBAAgB,CAAC,CAACD,UAAU,CAAC;IAAA;EAAC,CAC/C,CAAC;AAEN,CAAC;AAED,IAAMiB,MAAM,GAAGzB,UAAU,CAAC0B,MAAM,CAAC,CAAC,CAAC,CAAC;AACpC,eAAerB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}