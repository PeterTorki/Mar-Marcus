{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport HandleDatePicker from \"../components/HandleDatePicker\";\nimport { DateAndDataContext } from \"../Context/DateAndData\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DatePicker = function DatePicker(_ref) {\n  var date = _ref.date,\n    setDate = _ref.setDate;\n  var days = [\"الأحد\", \"الإثنين\", \"الثلاثاء\", \"الأربعاء\", \"الخميس\", \"الجمعة\", \"السبت\"];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDatePickerVisible = _useState2[0],\n    setDatePickerVisibility = _useState2[1];\n  var dayArabic = days[date.getDay()];\n  return _jsxs(View, {\n    children: [_jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        setDatePickerVisibility(function (isDatePickerVisible) {\n          return !isDatePickerVisible;\n        });\n      },\n      style: styles.buttonContainer,\n      children: [_jsxs(Text, {\n        style: styles.dateText,\n        children: [dayArabic, \" - \", date.toLocaleDateString()]\n      }), _jsx(AntDesign, {\n        style: styles.arrow,\n        name: \"down\",\n        size: 20,\n        color: \"black\"\n      })]\n    }), _jsx(HandleDatePicker, {\n      visibility: isDatePickerVisible,\n      visibilitySetter: setDatePickerVisibility,\n      dateSetter: setDate\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  dateText: {\n    fontSize: 27,\n    fontWeight: \"bold\",\n    marginRight: 5,\n    marginBottom: 5,\n    color: \"#451A00\"\n  },\n  arrow: {\n    marginTop: 5\n  }\n});\nexport default DatePicker;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","AntDesign","HandleDatePicker","DateAndDataContext","jsxs","_jsxs","jsx","_jsx","DatePicker","_ref","date","setDate","days","_useState","_useState2","_slicedToArray","isDatePickerVisible","setDatePickerVisibility","dayArabic","getDay","children","onPress","style","styles","buttonContainer","dateText","toLocaleDateString","arrow","name","size","color","visibility","visibilitySetter","dateSetter","create","display","flexDirection","fontSize","fontWeight","marginRight","marginBottom","marginTop"],"sources":["D:/Fci/JavaScript/React-Native/Mar-Marcus/src/components/DatePicker.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport HandleDatePicker from \"../components/HandleDatePicker\";\r\nimport { DateAndDataContext } from \"../Context/DateAndData\";\r\n\r\nconst DatePicker = ({ date, setDate }) => {\r\n  const days = [\r\n    \"الأحد\",\r\n    \"الإثنين\",\r\n    \"الثلاثاء\",\r\n    \"الأربعاء\",\r\n    \"الخميس\",\r\n    \"الجمعة\",\r\n    \"السبت\",\r\n  ];\r\n\r\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n\r\n  const dayArabic = days[date.getDay()];\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          setDatePickerVisibility(\r\n            (isDatePickerVisible) => !isDatePickerVisible\r\n          );\r\n        }}\r\n        style={styles.buttonContainer}\r\n      >\r\n        <Text style={styles.dateText}>\r\n          {dayArabic} - {date.toLocaleDateString()}\r\n        </Text>\r\n        <AntDesign style={styles.arrow} name=\"down\" size={20} color=\"black\" />\r\n      </TouchableOpacity>\r\n\r\n      <HandleDatePicker\r\n        visibility={isDatePickerVisible}\r\n        visibilitySetter={setDatePickerVisibility}\r\n        dateSetter={setDate}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  dateText: {\r\n    fontSize: 27,\r\n    fontWeight: \"bold\",\r\n    marginRight: 5,\r\n    marginBottom: 5,\r\n    color: \"#451A00\",\r\n  },\r\n  arrow: {\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nexport default DatePicker;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAEnD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,OAAOC,gBAAgB;AACvB,SAASC,kBAAkB;AAAiC,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE5D,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAA0B;EAAA,IAApBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EACjC,IAAMC,IAAI,GAAG,CACX,OAAO,EACP,SAAS,EACT,UAAU,EACV,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,OAAO,CACR;EAED,IAAAC,SAAA,GAAuDlB,QAAQ,CAAC,KAAK,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/DG,mBAAmB,GAAAF,UAAA;IAAEG,uBAAuB,GAAAH,UAAA;EAEnD,IAAMI,SAAS,GAAGN,IAAI,CAACF,IAAI,CAACS,MAAM,CAAC,CAAC,CAAC;EAErC,OACEd,KAAA,CAACR,IAAI;IAAAuB,QAAA,GACHf,KAAA,CAACL,gBAAgB;MACfqB,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbJ,uBAAuB,CACrB,UAACD,mBAAmB;UAAA,OAAK,CAACA,mBAAmB;QAAA,CAC/C,CAAC;MACH,CAAE;MACFM,KAAK,EAAEC,MAAM,CAACC,eAAgB;MAAAJ,QAAA,GAE9Bf,KAAA,CAACP,IAAI;QAACwB,KAAK,EAAEC,MAAM,CAACE,QAAS;QAAAL,QAAA,GAC1BF,SAAS,EAAC,KAAG,EAACR,IAAI,CAACgB,kBAAkB,CAAC,CAAC;MAAA,CACpC,CAAC,EACPnB,IAAA,CAACN,SAAS;QAACqB,KAAK,EAAEC,MAAM,CAACI,KAAM;QAACC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAO,CAAE,CAAC;IAAA,CACtD,CAAC,EAEnBvB,IAAA,CAACL,gBAAgB;MACf6B,UAAU,EAAEf,mBAAoB;MAChCgB,gBAAgB,EAAEf,uBAAwB;MAC1CgB,UAAU,EAAEtB;IAAQ,CACrB,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,IAAMY,MAAM,GAAGxB,UAAU,CAACmC,MAAM,CAAC;EAC/BV,eAAe,EAAE;IACfW,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE;EACjB,CAAC;EACDX,QAAQ,EAAE;IACRY,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,CAAC;IACfV,KAAK,EAAE;EACT,CAAC;EACDH,KAAK,EAAE;IACLc,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAejC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}